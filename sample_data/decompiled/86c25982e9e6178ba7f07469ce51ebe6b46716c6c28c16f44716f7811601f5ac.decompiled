[{"addr": 4198400, "funname": ".init_proc", "code": "__int64 (**init_proc())(void)\n{\n__int64 (**result)(void); // rax\n\nresult = &_gmon_start__;\nif ( &_gmon_start__ )\nresult = (__int64 (**)(void))_gmon_start__();\nreturn result;\n}"}, {"addr": 4198432, "funname": "sub_401020", "code": "__int64 sub_401020()\n{\nreturn qword_404010();\n}"}, {"addr": 4198448, "funname": ".free", "code": "// attributes: thunk\nvoid free(void *ptr)\n{\nfree(ptr);\n}"}, {"addr": 4198464, "funname": ".strncmp", "code": "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\nreturn strncmp(s1, s2, n);\n}"}, {"addr": 4198480, "funname": ".puts", "code": "// attributes: thunk\nint puts(const char *s)\n{\nreturn puts(s);\n}"}, {"addr": 4198496, "funname": ".fread", "code": "// attributes: thunk\nsize_t fread(void *ptr, size_t size, size_t n, FILE *stream)\n{\nreturn fread(ptr, size, n, stream);\n}"}, {"addr": 4198512, "funname": ".roundf", "code": "// attributes: thunk\nfloat roundf(float x)\n{\nreturn roundf(x);\n}"}, {"addr": 4198528, "funname": ".fclose", "code": "// attributes: thunk\nint fclose(FILE *stream)\n{\nreturn fclose(stream);\n}"}, {"addr": 4198544, "funname": ".strlen", "code": "// attributes: thunk\nsize_t strlen(const char *s)\n{\nreturn strlen(s);\n}"}, {"addr": 4198560, "funname": ".printf", "code": "// attributes: thunk\nint printf(const char *format, ...)\n{\nreturn printf(format);\n}"}, {"addr": 4198576, "funname": ".malloc", "code": "// attributes: thunk\nvoid *malloc(size_t size)\n{\nreturn malloc(size);\n}"}, {"addr": 4198592, "funname": ".fopen", "code": "// attributes: thunk\nFILE *fopen(const char *filename, const char *modes)\n{\nreturn fopen(filename, modes);\n}"}, {"addr": 4198608, "funname": ".sprintf", "code": "// attributes: thunk\nint sprintf(char *s, const char *format, ...)\n{\nreturn sprintf(s, format);\n}"}, {"addr": 4198624, "funname": ".fwrite", "code": "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\nreturn fwrite(ptr, size, n, s);\n}"}, {"addr": 4198640, "funname": "start", "code": "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n__int64 v3; // rax\nint v4; // esi\n__int64 v5; // [rsp-8h] [rbp-8h] BYREF\nchar *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\nv4 = v5;\nv5 = v3;\n_libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n__halt();\n}"}, {"addr": 4198688, "funname": "nullsub_1", "code": "void nullsub_1()\n{\n;\n}"}, {"addr": 4198704, "funname": "sub_401130", "code": "char *sub_401130()\n{\nreturn &byte_404098;\n}"}, {"addr": 4198816, "funname": "sub_4011A0", "code": "char *sub_4011A0()\n{\nchar *result; // rax\n\nif ( !byte_404098 )\n{\nresult = sub_401130();\nbyte_404098 = 1;\n}\nreturn result;\n}"}, {"addr": 4198864, "funname": "sub_4011D0", "code": "// attributes: thunk\n__int64 sub_4011D0()\n{\nreturn 0LL;\n}"}, {"addr": 4198866, "funname": "sub_4011D2", "code": "__int64 __fastcall sub_4011D2(char *a1)\n{\nreturn (unsigned __int16)(a1[1] << 8) | (a1[2] << 16) & 0xFF0000 | (a1[3] << 24) | (unsigned int)(unsigned __int8)*a1;\n}"}, {"addr": 4198956, "funname": "sub_40122C", "code": "__int64 __fastcall sub_40122C(int a1, int a2)\n{\nint v5; // [rsp+14h] [rbp-4h]\n\nwhile ( a1 )\n{\nv5 = a1;\na1 = a2 % a1;\na2 = v5;\n}\nreturn (unsigned int)a2;\n}"}, {"addr": 4199001, "funname": "sub_401259", "code": "__int64 __fastcall sub_401259(int a1, int a2)\n{\nreturn (unsigned int)(a2 * (a1 / (int)sub_40122C(a1, a2)));\n}"}, {"addr": 4199044, "funname": "sub_401284", "code": "__int64 __fastcall sub_401284(__int64 a1, int a2, __int64 a3, int a4, __int64 a5)\n{\nfloat v6; // [rsp+24h] [rbp-Ch]\nint j; // [rsp+28h] [rbp-8h]\nint i; // [rsp+2Ch] [rbp-4h]\n\nfor ( i = 0; i < a4 - a2; ++i )\n{\nv6 = 0.0;\nfor ( j = 0; j < a2; ++j )\nv6 = (float)(*(float *)(4LL * (a2 - j) - 4 + a1) * (float)*(__int16 *)(2LL * (i + j) + a3)) + v6;\n*(_WORD *)(2LL * i + a5) = (int)v6;\n}\nreturn (unsigned int)(a4 - a2);\n}"}, {"addr": 4201872, "funname": "init", "code": "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\nsigned __int64 v4; // rbp\n__int64 i; // rbx\n\ninit_proc();\nv4 = &off_403DF8 - &off_403DF0;\nif ( v4 )\n{\nfor ( i = 0LL; i != v4; ++i )\n((void (__fastcall *)(_QWORD, __int64, __int64))*(&off_403DF0 + i))(a1, a2, a3);\n}\n}"}, {"addr": 4201968, "funname": "fini", "code": "void fini(void)\n{\n;\n}"}, {"addr": 4201972, "funname": ".term_proc", "code": "void term_proc()\n{\n;\n}"}]