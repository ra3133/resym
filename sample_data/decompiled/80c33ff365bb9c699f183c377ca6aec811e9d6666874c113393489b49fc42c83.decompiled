[{"addr": 4198400, "funname": ".init_proc", "code": "__int64 (**init_proc())(void)\n{\n__int64 (**result)(void); // rax\n\nresult = &_gmon_start__;\nif ( &_gmon_start__ )\nresult = (__int64 (**)(void))_gmon_start__();\nreturn result;\n}"}, {"addr": 4198432, "funname": "sub_401020", "code": "__int64 sub_401020()\n{\nreturn qword_408010();\n}"}, {"addr": 4198448, "funname": ".getenv", "code": "// attributes: thunk\nchar *getenv(const char *name)\n{\nreturn getenv(name);\n}"}, {"addr": 4198464, "funname": ".free", "code": "// attributes: thunk\nvoid free(void *ptr)\n{\nfree(ptr);\n}"}, {"addr": 4198480, "funname": ".abort", "code": "// attributes: thunk\nvoid __noreturn abort(void)\n{\nabort();\n}"}, {"addr": 4198496, "funname": ".puts", "code": "// attributes: thunk\nint puts(const char *s)\n{\nreturn puts(s);\n}"}, {"addr": 4198512, "funname": ".ferror", "code": "// attributes: thunk\nint ferror(FILE *stream)\n{\nreturn ferror(stream);\n}"}, {"addr": 4198528, "funname": ".qsort", "code": "// attributes: thunk\nvoid qsort(void *base, size_t nmemb, size_t size, __compar_fn_t compar)\n{\nqsort(base, nmemb, size, compar);\n}"}, {"addr": 4198544, "funname": ".fclose", "code": "// attributes: thunk\nint fclose(FILE *stream)\n{\nreturn fclose(stream);\n}"}, {"addr": 4198560, "funname": ".strlen", "code": "// attributes: thunk\nsize_t strlen(const char *s)\n{\nreturn strlen(s);\n}"}, {"addr": 4198576, "funname": ".strchr", "code": "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\nreturn strchr(s, c);\n}"}, {"addr": 4198592, "funname": ".printf", "code": "// attributes: thunk\nint printf(const char *format, ...)\n{\nreturn printf(format);\n}"}, {"addr": 4198608, "funname": ".strrchr", "code": "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\nreturn strrchr(s, c);\n}"}, {"addr": 4198624, "funname": ".close", "code": "// attributes: thunk\nint close(int fd)\n{\nreturn close(fd);\n}"}, {"addr": 4198640, "funname": ".fputc", "code": "// attributes: thunk\nint fputc(int c, FILE *stream)\n{\nreturn fputc(c, stream);\n}"}, {"addr": 4198656, "funname": ".memchr", "code": "// attributes: thunk\nvoid *memchr(const void *s, int c, size_t n)\n{\nreturn memchr(s, c, n);\n}"}, {"addr": 4198672, "funname": ".read", "code": "// attributes: thunk\nssize_t read(int fd, void *buf, size_t nbytes)\n{\nreturn read(fd, buf, nbytes);\n}"}, {"addr": 4198688, "funname": ".memcmp", "code": "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\nreturn memcmp(s1, s2, n);\n}"}, {"addr": 4198704, "funname": ".calloc", "code": "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\nreturn calloc(nmemb, size);\n}"}, {"addr": 4198720, "funname": ".strcmp", "code": "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\nreturn strcmp(s1, s2);\n}"}, {"addr": 4198736, "funname": ".fprintf", "code": "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\nreturn fprintf(stream, format);\n}"}, {"addr": 4198752, "funname": ".memcpy", "code": "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\nreturn memcpy(dest, src, n);\n}"}, {"addr": 4198768, "funname": ".malloc", "code": "// attributes: thunk\nvoid *malloc(size_t size)\n{\nreturn malloc(size);\n}"}, {"addr": 4198784, "funname": ".__fxstat", "code": "// attributes: thunk\nint __fxstat(int ver, int fildes, struct stat *stat_buf)\n{\nreturn _fxstat(ver, fildes, stat_buf);\n}"}, {"addr": 4198800, "funname": ".memmove", "code": "// attributes: thunk\nvoid *memmove(void *dest, const void *src, size_t n)\n{\nreturn memmove(dest, src, n);\n}"}, {"addr": 4198816, "funname": ".open", "code": "// attributes: thunk\nint open(const char *file, int oflag, ...)\n{\nreturn open(file, oflag);\n}"}, {"addr": 4198832, "funname": ".fopen", "code": "// attributes: thunk\nFILE *fopen(const char *filename, const char *modes)\n{\nreturn fopen(filename, modes);\n}"}, {"addr": 4198848, "funname": ".perror", "code": "// attributes: thunk\nvoid perror(const char *s)\n{\nperror(s);\n}"}, {"addr": 4198864, "funname": ".vfprintf", "code": "// attributes: thunk\nint vfprintf(FILE *s, const char *format, __gnuc_va_list arg)\n{\nreturn vfprintf(s, format, arg);\n}"}, {"addr": 4198880, "funname": ".strtoul", "code": "// attributes: thunk\nunsigned __int64 strtoul(const char *nptr, char **endptr, int base)\n{\nreturn strtoul(nptr, endptr, base);\n}"}, {"addr": 4198896, "funname": ".atoi", "code": "// attributes: thunk\nint atoi(const char *nptr)\n{\nreturn atoi(nptr);\n}"}, {"addr": 4198912, "funname": ".sprintf", "code": "// attributes: thunk\nint sprintf(char *s, const char *format, ...)\n{\nreturn sprintf(s, format);\n}"}, {"addr": 4198928, "funname": ".exit", "code": "// attributes: thunk\nvoid __noreturn exit(int status)\n{\nexit(status);\n}"}, {"addr": 4198944, "funname": ".fwrite", "code": "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\nreturn fwrite(ptr, size, n, s);\n}"}, {"addr": 4198960, "funname": ".bsearch", "code": "// attributes: thunk\nvoid *bsearch(const void *key, const void *base, size_t nmemb, size_t size, __compar_fn_t compar)\n{\nreturn bsearch(key, base, nmemb, size, compar);\n}"}, {"addr": 4198976, "funname": ".strdup", "code": "// attributes: thunk\nchar *strdup(const char *s)\n{\nreturn strdup(s);\n}"}, {"addr": 4198992, "funname": ".__ctype_b_loc", "code": "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\nreturn _ctype_b_loc();\n}"}, {"addr": 4199008, "funname": "start", "code": "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n__int64 v3; // rax\nint v4; // esi\n__int64 v5; // [rsp-8h] [rbp-8h] BYREF\nchar *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\nv4 = v5;\nv5 = v3;\n_libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n__halt();\n}"}, {"addr": 4199056, "funname": "nullsub_1", "code": "void nullsub_1()\n{\n;\n}"}, {"addr": 4199072, "funname": "sub_4012A0", "code": "void *sub_4012A0()\n{\nreturn &unk_408150;\n}"}, {"addr": 4199184, "funname": "sub_401310", "code": "void *sub_401310()\n{\nvoid *result; // rax\n\nif ( !byte_408168 )\n{\nresult = sub_4012A0();\nbyte_408168 = 1;\n}\nreturn result;\n}"}, {"addr": 4199232, "funname": "sub_401340", "code": "// attributes: thunk\n__int64 sub_401340()\n{\nreturn 0LL;\n}"}, {"addr": 4199234, "funname": "compar", "code": "__int64 __fastcall compar(const void *a1, const void *a2)\n{\nsize_t v2; // rax\nunsigned int v4; // [rsp+14h] [rbp-34h]\nsize_t v5; // [rsp+20h] [rbp-28h]\nchar *s; // [rsp+28h] [rbp-20h]\n\ns = *(char **)a2;\nv5 = strlen(*(const char **)a2);\nv2 = *((unsigned __int8 *)a1 + 3);\nif ( v5 <= v2 )\nv2 = v5;\nv4 = memcmp(*((const void **)a1 + 2), s, v2);\nif ( v4 )\nreturn v4;\nif ( v5 == *((unsigned __int8 *)a1 + 3) )\nreturn 0LL;\nreturn (unsigned int)v5 - *((unsigned __int8 *)a1 + 3);\n}"}, {"addr": 4203302, "funname": "sub_402326", "code": "int __fastcall sub_402326(const void *a1, const void *a2)\n{\nint result; // eax\n\nif ( *(_BYTE *)(**(_QWORD **)a1 + 3LL) == *(_BYTE *)(**(_QWORD **)a2 + 3LL) )\nresult = memcmp(\n*(const void **)(**(_QWORD **)a1 + 16LL),\n*(const void **)(**(_QWORD **)a2 + 16LL),\n*(unsigned __int8 *)(**(_QWORD **)a1 + 3LL));\nelse\nresult = *(unsigned __int8 *)(**(_QWORD **)a1 + 3LL) - *(unsigned __int8 *)(**(_QWORD **)a2 + 3LL);\nreturn result;\n}"}, {"addr": 4203474, "funname": "sub_4023D2", "code": "int __fastcall sub_4023D2(const void *a1, const void *a2)\n{\nint result; // eax\n__int64 v3; // [rsp+18h] [rbp-20h]\n\nv3 = *(_QWORD *)a2;\nif ( *((_BYTE *)a1 + 3) == *(_BYTE *)(**(_QWORD **)a2 + 3LL) )\nresult = memcmp(*((const void **)a1 + 2), *(const void **)(*(_QWORD *)v3 + 16LL), *((unsigned __int8 *)a1 + 3));\nelse\nresult = *((unsigned __int8 *)a1 + 3) - *(unsigned __int8 *)(*(_QWORD *)v3 + 3LL);\nreturn result;\n}"}, {"addr": 4204598, "funname": "sub_402836", "code": "_QWORD *sub_402836()\n{\n_QWORD *v1; // [rsp+18h] [rbp-10h]\n\nv1 = calloc(1uLL, 0x50uLL);\nif ( !v1 )\n{\nperror(0LL);\nexit(1);\n}\nv1[7] = qword_4081C8;\nqword_4081C8 = (__int64)v1;\nreturn v1;\n}"}, {"addr": 4208901, "funname": "sub_403905", "code": "__int64 sub_403905()\n{\n__int64 result; // rax\n\nresult = (unsigned __int8)byte_4081AD;\nif ( byte_4081AD )\nresult = sub_403604(*(_QWORD *)(qword_4081B0 + 16), 0);\nreturn result;\n}"}, {"addr": 4209181, "funname": "sub_403A1D", "code": "int sub_403A1D(FILE *a1, const char *a2, ...)\n{\nint result; // eax\ngcc_va_list arg; // [rsp+18h] [rbp-D0h] BYREF\n\nif ( a1 )\n{\nva_start(arg, a2);\nresult = vfprintf(a1, a2, arg);\n}\nreturn result;\n}"}, {"addr": 4213648, "funname": "init", "code": "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\nsigned __int64 v4; // rbp\n__int64 i; // rbx\n\ninit_proc();\nv4 = &off_407E08 - &off_407E00;\nif ( v4 )\n{\nfor ( i = 0LL; i != v4; ++i )\n((void (__fastcall *)(_QWORD, __int64, __int64))*(&off_407E00 + i))(a1, a2, a3);\n}\n}"}, {"addr": 4213744, "funname": "fini", "code": "void fini(void)\n{\n;\n}"}, {"addr": 4213760, "funname": "sub_404C00", "code": "int __fastcall sub_404C00(int fildes, struct stat *stat_buf)\n{\nreturn __fxstat(1, fildes, stat_buf);\n}"}, {"addr": 4213776, "funname": ".term_proc", "code": "void term_proc()\n{\n;\n}"}]